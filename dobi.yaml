#
# Compose project tasks
#
# https://github.com/dnephin/dobi

meta:
    project: compose
    default: all
    include: [dobi-release.yml]

#
# Mounts
#
mount=source:
    bind: .
    path: /code

mount=dot-git:
    bind: .git
    path: /code/.git

mount=dist:
    bind: dist/
    path: /code/dist

mount=docs-source:
    bind: docs/
    path: /docs/content/compose

#
# Images
#
image=builder:
    image: compose-dev
    tags: ['{git.short-sha}']
    context: .

image=dist-image:
    image: docker/compose
    tags: ['{env.COMPOSE_VERSION}']
    dockerfile: Dockerfile.run
    context: .
    depends: [source-tarball, write-git-sha]
    description: "Build the distribution image"

image=linter:
    image: compose-lint
    dockerfile: Dockerfile.lint
    context: .

image=docs-image:
    image: compose-docs
    dockerfile: Dockerfile
    context: docs/
    tags: ['{unique}', '{git.short-sha}']


#
# Run containers
#
job=shell:
    use: builder
    mounts: [source]
    interactive: true
    entrypoint: "bash"
    provide-docker: true
    description: "Start an interactive development environment"

job=lint:
    use: linter
    mounts: [source]
    description: "Run code style checks and static validation"

job=test-all:
    use: builder
    mounts: [dot-git]
    interactive: true
    provide-docker: true
    entrypoint: "script/test/all"
    env:
      - "DOCKER_VERSIONS={env.TEST_DOCKER_VERSIONS:all}"
      - "DOCKER_DAEMON_ARGS=--storage-driver={env.STORAGE_DRIVER:overlay}"
      # This must match the image and tag used by `builder`
      - "TAG=compose-dev:{git.short-sha}"

job=binary-linux:
    use: builder
    mounts: [dot-git, dist]
    entrypoint: "script/build/linux-entrypoint"
    depends: [clean]

job=source-tarball:
    use: builder
    # TODO: how to support variables or globbing in artifact name?
    artifact: dist/
    mounts: [dot-git, dist]
    entrypoint: "bash -c '
                 python setup.py sdist &&
                 cp dist/docker-compose-*.tar.gz dist/docker-compose-release.tar.gz'"
    depends: [clean]

job=clean:
    use: builder
    mounts: [source]
    entrypoint: "script/clean"

job=docs:
    use: docs-image
    interactive: true
    mounts: [docs-source]
    command: "bash -c 'exec hugo server --port=8000 --bind=0.0.0.0 --watch $HUGO_ARGS'"
    env: ["HUGO_ARGS={env.HUGO_ARGS:}"]
    description: "Build and serve the docs"

job=docs-shell:
    use: docs-image
    interactive: true
    mounts: [docs-source]
    command: "bash"

#
# Aliases
#
alias=test:
    tasks: [test-all]
    description: "Run all tests"

alias=build:
    tasks: [binary-linux]
    description: "Build the binary"

alias=all:
    tasks: [lint, test]

alias=ci:
    tasks: [lint, test, build]
